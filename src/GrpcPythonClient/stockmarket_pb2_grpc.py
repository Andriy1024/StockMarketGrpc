# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import stockmarket_pb2 as stockmarket__pb2


class StockMarketServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetStock = channel.unary_unary(
        '/StockMarketService/GetStock',
        request_serializer=stockmarket__pb2.StockRequest.SerializeToString,
        response_deserializer=stockmarket__pb2.StockData.FromString,
        )
    self.GetStockHistory = channel.unary_unary(
        '/StockMarketService/GetStockHistory',
        request_serializer=stockmarket__pb2.StockHistoryRequest.SerializeToString,
        response_deserializer=stockmarket__pb2.StockHistoryReply.FromString,
        )
    self.GetStockMarketStream = channel.unary_stream(
        '/StockMarketService/GetStockMarketStream',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=stockmarket__pb2.StockData.FromString,
        )
    self.GetStockStream = channel.stream_stream(
        '/StockMarketService/GetStockStream',
        request_serializer=stockmarket__pb2.StockRequest.SerializeToString,
        response_deserializer=stockmarket__pb2.StockPerDateReply.FromString,
        )


class StockMarketServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetStock(self, request, context):
    """query the server for paticolar stock and date - return stock 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStockHistory(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStockMarketStream(self, request, context):
    """request stock market stream - return StockMarketData stocks array
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStockStream(self, request_iterator, context):
    """send request as steram for stock + datetime - return stock  
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StockMarketServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetStock': grpc.unary_unary_rpc_method_handler(
          servicer.GetStock,
          request_deserializer=stockmarket__pb2.StockRequest.FromString,
          response_serializer=stockmarket__pb2.StockData.SerializeToString,
      ),
      'GetStockHistory': grpc.unary_unary_rpc_method_handler(
          servicer.GetStockHistory,
          request_deserializer=stockmarket__pb2.StockHistoryRequest.FromString,
          response_serializer=stockmarket__pb2.StockHistoryReply.SerializeToString,
      ),
      'GetStockMarketStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetStockMarketStream,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=stockmarket__pb2.StockData.SerializeToString,
      ),
      'GetStockStream': grpc.stream_stream_rpc_method_handler(
          servicer.GetStockStream,
          request_deserializer=stockmarket__pb2.StockRequest.FromString,
          response_serializer=stockmarket__pb2.StockPerDateReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'StockMarketService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
